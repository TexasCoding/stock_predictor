[tool.poetry]
name = "stock-predictor"
version = "0.0.2"
description = ""
authors = ["TexasCoding <jeff10278@me.com>"]
readme = "README.md"
packages = [{include = "stock_predictor", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
tensorflow = {extras = ["and-cuda"], version = "^2.16.2"}
scikit-learn = "^1.5.1"
yfinance = "^0.2.40"
alpaca-py = "^0.27.1"
python-dotenv = "^1.0.1"
pendulum = "^3.0.0"
matplotlib = "^3.9.1"
requests = "^2.32.3"
requests-cache = "^1.2.1"
requests-ratelimiter = "^0.7.0"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.31"
ta = "^0.11.0"
openai = "^1.35.10"
tenacity = "^8.5.0"
alembic = "^1.13.2"
mplfinance = "^0.12.10b0"
streamlit = "^1.36.0"
notebook = "^7.2.1"
ipywidgets = "^8.1.3"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
ruff = "^0.5.1"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
